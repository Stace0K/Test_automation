{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 2}, "tests": {"0": {"status": "ERROR", "message": "@pytest.fixture()\n    def make_folders():\n>       return checkout(\"mkdir {} {} {} {}\".format(data[\"folder_in\"], data[\"folder_out\"], data[\"folder_ext\"], data[\"folder_ext2\"]), \"\")\nE       KeyError: 'folder_ext2'\n\nconftest.py:12: KeyError\n", "test_name": "test_nstep1", "rerun": "0"}, "1": {"status": "ERROR", "message": "file /home/zerg/\u0420\u0430\u0431\u043e\u0447\u0438\u0439 \u0441\u0442\u043e\u043b/lessons/assem4/dz/test_2.py, line 15\n      def test_nstep2(self, make_bad_arx):\nE       fixture 'make_bad_arx' not found\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, clear_folders, doctest_namespace, extra, include_metadata_in_junit_xml, make_files, make_folders, metadata, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/zerg/\u0420\u0430\u0431\u043e\u0447\u0438\u0439 \u0441\u0442\u043e\u043b/lessons/assem4/dz/test_2.py:15\n", "test_name": "test_nstep2", "rerun": "0"}, "2": {"status": "FAIL", "message": "   AssertionError: test3 FAIL\n   assert False\n    +  where False = all([False, True])\n", "test_name": "test_nstep3", "rerun": "0"}}, "suite_name": "test_2.py"}}}, "date": "April 28, 2023", "start_time": 1682711511.700373, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "1", "skip": "0", "error": "2", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "3"}